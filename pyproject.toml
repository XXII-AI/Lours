[project]
name = "lours"
version = "1.2.1"
description = ""
authors = [
    { name = "XXII" },
    { name = "Lilian Glaudin", email = "lilian.glaudin@xxii.fr" },
    { name = "ClÃ©ment Pinard", email = "mail@clementpinard.fr" },
    { name = "Quoc Cuong LE", email = "quoccuong.le@xxii.fr" },
    { name = "Nacer Kaci", email = "nacer.kaci@xxii.fr" },
    { name = "Bastien Botrel", email = "bastien.botrel@xxii.fr" },
]
requires-python = ">=3.10, <3.14"
readme = "README.md"
license = "MIT"
dependencies = [
    "pandas[parquet]>=2,<3",
    "tqdm~=4.64",
    "PyYAML>=6.0.1,<7",
    "imageio>=2.31.3,<3",
    "imagesize>=1.4.1,<2",
    "POT>=0.9.1,<0.10",
    "jsonschema-rs>=0.29.0,<0.30",
    "scikit-learn>=1.3.0,<2",
    "typing-extensions>=4.7.1,<5",
    "watchdog>=6.0.0,<7",
    "toml>=0.10.2,<0.11",
    "shortuuid>=1.0.11,<2",
    "faker>30",
    "requests>=2,<3",
    "xmltodict>=0.14.0,<0.15",
    "networkx>=3.4.2,<4",
]

[project.optional-dependencies]
fiftyone = [
    "fiftyone>=1.0.0,<2",
    "boto3==1.26.83",
]
plot-utils = []
regression = ["pytest-regressions>=2.5.0,<3"]

[project.scripts]
caipy_to_fiftyone = "lours.cli.caipy_to_fiftyone:run"
c2f = "lours.cli.caipy_to_fiftyone:run"

[project.entry-points.pytest11]
dataset_regressions = "lours.utils.regression_testing"

[dependency-groups]
test = [
    "pytest>=8.3.3,<9",
    "pycocotools>=2.0.8,<3",
    "pre-commit>=4.0.0,<5",
    "coverage>=7.6.1,<8",
    "pandas-stubs>=2.2.3.250527,<3",
    "pytest-sugar>=1.0.0,<2",
    "ipykernel>=6.29.0,<7",
    "ipywidgets>=8.0.3,<9",
    "pytest-xdist>=3.6.1,<4",
]
docs = [
    "Sphinx>=8.0.0,<9",
    "pydata-sphinx-theme>=0.16.0,<0.17",
    "myst-parser>=4.0.0,<5",
    "jupyter>=1.0.0,<2",
    "seaborn>=0.13.0,<0.14",
    "nbsphinx>=0.9.3,<0.10",
    "sphinx-copybutton>=0.5.2,<0.6",
    "sphinx-autobuild>=2024.0.0,<2025",
    "ipython>=8.15.0,<9",
    "sphinx-favicon>=1.0.1,<2",
    "sphinx-argparse>=0.5.0,<0.6",
    "mercury>=2.3.10,<3",
]

[tool.uv]
default-groups = [
    "test",
    "docs",
]

[tool.hatch.build.targets.sdist]
include = ["lours"]

[tool.hatch.build.targets.wheel]
include = ["lours"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pydoclint]
style = 'google'
arg-type-hints-in-docstring = false
skip-checking-raises = true
allow-init-docstring = true
check-return-types = false
check-yield-types = false

[tool.pytest.ini_options]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS"]
addopts = "--import-mode=importlib --doctest-modules"
testpaths = ["test_lours", "lours"]

[tool.coverage.run]
source = ["lours"]
